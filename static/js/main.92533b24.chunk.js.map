{"version":3,"sources":["Components/DashBoard.js","Components/Header.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["DashBoard","state","batteryData","dataApi","setInterval","number","Math","random","toFixed","setState","this","style","display","flexDirection","backgroundColor","color","width","borderRadius","elevation","marginLeft","fontWeight","fontFamily","fontStyle","fontSize","paddingRight","onClick","props","onLogout","justifyContent","alignContent","alignItems","textAlign","paddingLeft","map","data","index","margin","React","Component","Header","className","paddingTop","Login","currentAppState","userName","password","error","checkValidity","check","indexOf","console","log","onChangeText","eve","target","id","value","onLogin","trim","length","placeholder","padding","onChange","type","paddingBottom","height","App","propsState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92533b24.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass DashBoard extends React.Component {\r\n  state = {\r\n    batteryData: [0, 0, 0, 0],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.dataApi();\r\n  }\r\n  dataApi = () => {\r\n    setInterval(() => {\r\n      var number = Math.random(0, 100).toFixed(3);\r\n      this.setState({\r\n        batteryData: [number, number, number, number],\r\n      });\r\n    }, 2000);\r\n  };\r\n  render() {\r\n    const { batteryData } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#84e09d\",\r\n            color: \"white\",\r\n            width: \"30%\",\r\n            borderRadius: 10,\r\n            elevation: 1,\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Candara\",\r\n              fontStyle: \"italic\",\r\n              fontSize: \"25px\",\r\n            }}\r\n          >\r\n            DashBoard\r\n          </h1>\r\n          <h2\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Candara\",\r\n              fontStyle: \"italic\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            bms\r\n          </h2>\r\n          <h2\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Candara\",\r\n              fontStyle: \"italic\",\r\n              fontSize: \"20px\",\r\n              paddingRight: \"10px\",\r\n            }}\r\n            onClick={() => this.props.onLogout()}\r\n          >\r\n            logout\r\n          </h2>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            paddingLeft: 10,\r\n            width: \"70%\",\r\n            backgroundColor: \"#cccccc\",\r\n            borderRadius: 10,\r\n            elevation: 1,\r\n            color:'white'\r\n          }}\r\n        >\r\n          <h1>Battery Voltages</h1>\r\n          {batteryData.map((data, index) => (\r\n            <div key={index} style={{ margin: 10 }}>\r\n              <p\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Candara\",\r\n                  fontStyle: \"italic\",\r\n                }}\r\n              >{`voltage v${index + 1}`}</p>\r\n              <p\r\n                style={{\r\n                  margin: 10,\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Candara\",\r\n                  fontStyle: \"italic\",\r\n                }}\r\n              >\r\n                {data}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n","import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App-header\">\r\n        <h1 style={{ fontFamily: \"Candara\", fontSize: \"30px\" }}>bms</h1>\r\n        <p\r\n          style={{\r\n            marginLeft: 10,\r\n            paddingTop: 5,\r\n            fontFamily: \"Candara\",\r\n            fontStyle: \"italic\",\r\n            fontSize: \"15px\",\r\n            \r\n          }}\r\n        >\r\n          A Managment And Analytics\r\n        </p>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React from \"react\";\nimport DashBoard from \"./DashBoard\";\nimport Header from \"./Header\";\n\nclass Login extends React.Component {\n  state = {\n    currentAppState: 0,\n    userName: \"\",\n    password: \"\",\n    error: \"\",\n  };\n\n  checkValidity = () => {\n    var check = this.state.userName.indexOf(\"@\");\n    console.log(\"check\", check);\n    if (check === -1) {\n      this.setState({\n        error: \"@ must contain in username\",\n      });\n    } else {\n      this.setState({\n        error: \"\",\n      });\n    }\n  };\n\n  onChangeText = (eve) => {\n    const eve_target = eve.target.id;\n    eve_target === \"userName\"\n      ? this.setState(\n          {\n            userName: eve.target.value,\n          },\n          () => this.checkValidity()\n        )\n      : this.setState({\n          password: eve.target.value,\n        });\n  };\n  onLogin = () => {\n    const { userName } = this.state;\n    const { password } = this.state;\n    if (userName.trim().length === 0 || password.trim().length === 0) {\n      this.setState({\n        error: \"username/password must not be empty\",\n      });\n    } else {\n      this.setState({\n        error: \"\",\n        currentAppState: 1,\n      });\n    }\n  };\n  onLogout = () => {\n    this.setState({\n      currentAppState: 0,\n    });\n  };\n  render() {\n    return this.state.currentAppState === 0 ? (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Header currentAppState={this.state.currentAppState} />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <h1>Login</h1>\n          <input\n            id=\"userName\"\n            placeholder=\"username\"\n            style={{ padding: 5 }}\n            onChange={this.onChangeText}\n          />\n          <br />\n          <br />\n          <input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            style={{ padding: 5 }}\n            onChange={this.onChangeText}\n          />\n          <p style={{ color: \"#b60000\", fontWeight: \"bold\" }}>\n            {this.state.error}\n          </p>\n          <button\n            onClick={this.onLogin}\n            style={{\n              backgroundColor: \"#282c34\",\n              color: \"white\",\n              paddingLeft: 20,\n              paddingRight: 20,\n              paddingTop: 10,\n              paddingBottom: 10,\n            }}\n          >\n            Login\n          </button>\n          <br />\n          <br />\n        </div>\n      </div>\n    ) : (\n      <div style={{display:'flex',flexDirection:'column',height:'100%'}}>\n        <Header />\n        <br></br>\n        <DashBoard onLogout={this.onLogout} />\n      </div>\n      \n    );\n  }\n}\n\nexport default Login;\n","import \"./App.css\";\nimport React from \"react\";\n\nimport Login from \"./Components/Login\";\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Login\n          propsState={this.state}\n          onLogin={this.onLogin}\n          onChangeText={this.onChangeText}\n          checkValidity={this.checkValidity}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}